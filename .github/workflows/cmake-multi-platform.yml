name: CMake Test Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        cc: [gcc, clang]
        include:
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
          - os: ubuntu-latest
            cc: clang
            cxx: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Install GTests and GMock
      run: |
          sudo apt install -y googletest libgtest-dev cmake-extras google-mock libgmock-dev

    - name: Cache CMake build
      uses: actions/cache@v4
      env:
        cache-name: cache-cmake-dependency-builds
      with:
        path: ${{github.workspace}}/build/
        # Cache hash is dependent on CMakeLists anywhere as these can change what's in the cache
        key: ${{ env.cache-name }}-${{ matrix.os }}-${{ matrix.cc }}-${{ hashFiles('CMakeLists.txt') }}

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
        -DCMAKE_cc=${{ matrix.cc }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
